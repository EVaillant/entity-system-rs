var searchIndex = JSON.parse('{\
"entity_system":{"doc":"Entity System Composant in Rust","i":[[3,"Entity","entity_system","Entity type, as seen by the user.",null,null],[12,"id","","id of Entity",0,null],[3,"EntityAllocator","","Entity Factory.",null,null],[3,"EntityAllocatorIterator","","Iterator over [<code>EntityAllocator</code>].",null,null],[8,"Component","","Abstract component type.",null,null],[16,"Storage","","",1,null],[8,"StorageAccess","","Abstract access to storge by component type.",null,null],[10,"get","","Return ref on Storage",2,[[],["ref",3]]],[10,"get_mut","","Return ref mut on Storage",2,[[],["refmut",3]]],[8,"EntityManagerComponent","","Abstract entity manager component type.",null,null],[10,"free","","Free all components for entity.",3,[[["entity",3]]]],[3,"EntityManager","","Manage (create, delete, update, iter...) Entities.",null,null],[3,"EntityIterator","","Iterator over [<code>EntityManager</code>].",null,null],[3,"Query","","Query to select some [<code>Entity</code>] from [<code>EntityManager</code>].",null,null],[8,"EventHandler","","",null,null],[10,"on_event","","",4,[[]]],[8,"Dispatcher","","",null,null],[10,"connect","","",5,[[["refcell",3],["rc",3],["rc",3]]]],[10,"disconnect","","",5,[[["refcell",3],["rc",3],["rc",3]]]],[8,"AccessEventAdapter","","",null,null],[10,"get","","",6,[[],["refcell",3]]],[3,"Connection","","",null,null],[3,"Adapter","","",null,null],[3,"EventDispatcher","","",null,null],[8,"Storage","","Trait must be implemented to store [<code>crate::Component</code>]",null,null],[10,"alloc","","Allocation an item in the storage",7,[[["entity",3]]]],[10,"free","","Free the item in the storage",7,[[["entity",3]]]],[10,"get","","Get item from storage",7,[[["entity",3]]]],[10,"get_mut","","Get item from storage (mutable version)",7,[[["entity",3]]]],[10,"has","","Check if allocatio has been done    ",7,[[["entity",3]]]],[3,"BasicVecStorage","","Implementation of Storage with a [<code>Vec</code>] as underlying.",null,null],[4,"RefreshPeriod","","Definie the system execution period.",null,null],[13,"EveryTime","","Each time.",8,null],[13,"At","","After a date.",8,null],[13,"Stop","","Stop to refresh.",8,null],[8,"System","","Abstract system type.",null,null],[10,"name","","Get the system name.",9,[[]]],[10,"run","","Execute the system.",9,[[],["refreshperiod",4]]],[3,"SystemManager","","Manage & Execute [<code>System</code>](s)",null,null],[14,"create_entity_manager_component","","Create EntityManagerComponent",null,null],[14,"create_event_adapters","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"connect","","",17,[[["refcell",3],["rc",3],["rc",3]]]],[11,"disconnect","","",17,[[["refcell",3],["rc",3],["rc",3]]]],[11,"alloc","","",18,[[["entity",3]]]],[11,"free","","",18,[[["entity",3]]]],[11,"get","","",18,[[["entity",3]]]],[11,"get_mut","","",18,[[["entity",3]]]],[11,"has","","",18,[[["entity",3]]]],[11,"next","","",11,[[],[["entity",3],["option",4]]]],[11,"next","","",13,[[],[["entity",3],["option",4]]]],[11,"clone","","",0,[[],["entity",3]]],[11,"clone","","",8,[[],["refreshperiod",4]]],[11,"default","","",10,[[]]],[11,"default","","",12,[[],["entitymanager",3]]],[11,"default","","",14,[[],["query",3]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[],["adapter",3]]],[11,"default","","",18,[[],["basicvecstorage",3]]],[11,"default","","",19,[[]]],[11,"eq","","",0,[[["entity",3]]]],[11,"ne","","",0,[[["entity",3]]]],[11,"eq","","",8,[[["refreshperiod",4]]]],[11,"ne","","",8,[[["refreshperiod",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"new","","Create a new <code>Entity</code>",0,[[]]],[11,"new","","Create a new <code>EntityAllocator</code>",10,[[]]],[11,"alloc","","Alloc a new <code>Entity</code>",10,[[],["entity",3]]],[11,"free","","Free an <code>Entity</code>. <code>Entity</code> id could be re-used",10,[[["entity",3]]]],[11,"iter","","Iter over allocated <code>Entity</code>",10,[[],["entityallocatoriterator",3]]],[11,"new","","Create an Iterator",11,[[["entityallocator",3]]]],[11,"new","","Create new instance.",12,[[]]],[11,"create_entity","","Create new entity.",12,[[],["entity",3]]],[11,"delete_entity","","Delete an entity.",12,[[["entity",3]]]],[11,"add_component","","Add component to an entity. The component is initialized …",12,[[["entity",3]]]],[11,"add_component_with","","Add component to an entity and initialize with closure f.",12,[[["entity",3]]]],[11,"remove_component","","Remove component to an entity.",12,[[["entity",3]]]],[11,"has_component","","Check if an entity has a component.",12,[[["entity",3]]]],[11,"get_component","","Get a ref of component from an entity.",12,[[["entity",3]],["ref",3]]],[11,"get_component_mut","","Get a mut ref of component from an entity.",12,[[["entity",3]],["refmut",3]]],[11,"update_component_with","","Update a component from an entity via closure f.",12,[[["entity",3]]]],[11,"iter","","Iterate on Entity that match the query.",12,[[["query",3]],["entityiterator",3]]],[11,"iter_all","","Iterate over all Entities.",12,[[],["entityallocatoriterator",3]]],[11,"new","","Create an Iterator",13,[[["query",3],["entitymanager",3]]]],[11,"new","","Create a new query",14,[[]]],[11,"check","","Check if query match the entity.",14,[[["entitymanager",3],["entity",3]]]],[11,"check_component","","Check entity has the component.",14,[[]]],[11,"check_not_component","","Check entity has not the component.",14,[[]]],[11,"check_component_by","","Check entity has the component and the composant match …",14,[[]]],[11,"check_global","","Check if entity match the closure f.",14,[[]]],[11,"new","","",15,[[["rc",3],["rc",3]]]],[11,"empty","","",15,[[]]],[11,"connect","","",15,[[]]],[11,"disconnect","","",15,[[]]],[11,"new","","",16,[[]]],[11,"connect","","",16,[[["rc",3],["refcell",3]]]],[11,"disconnect","","",16,[[["rc",3],["refcell",3]]]],[11,"invoke","","",16,[[]]],[11,"new","","",17,[[],["rc",3]]],[11,"create_connection","","",17,[[["rc",3],["rc",3]],["connection",3]]],[11,"push","","",17,[[["rc",3]]]],[11,"dispatch","","",17,[[["rc",3]]]],[11,"new","","",19,[[]]],[11,"add_system","","Add a system",19,[[["refcell",3],["rc",3]]]],[11,"set_refresh","","Update refresh time for a system",19,[[["refreshperiod",4]]]],[11,"update","","Execute all systems",19,[[]]]],"p":[[3,"Entity"],[8,"Component"],[8,"StorageAccess"],[8,"EntityManagerComponent"],[8,"EventHandler"],[8,"Dispatcher"],[8,"AccessEventAdapter"],[8,"Storage"],[4,"RefreshPeriod"],[8,"System"],[3,"EntityAllocator"],[3,"EntityAllocatorIterator"],[3,"EntityManager"],[3,"EntityIterator"],[3,"Query"],[3,"Connection"],[3,"Adapter"],[3,"EventDispatcher"],[3,"BasicVecStorage"],[3,"SystemManager"]]},\
"paste":{"doc":"github crates-io docs-rs","i":[[14,"paste","paste","",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);